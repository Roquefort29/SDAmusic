# Generated by Django 3.2 on 2022-12-26 14:07

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Url')),
                ('title', models.CharField(max_length=150)),
                ('photo', models.ImageField(blank=True, upload_to='photos/%Y/%m/')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(default=True, verbose_name='Published?')),
            ],
            options={
                'verbose_name': 'Album',
                'verbose_name_plural': 'Albums',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Url')),
                ('name', models.CharField(max_length=50)),
                ('photo', models.ImageField(upload_to='photos/%Y/%m/')),
                ('is_verify', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Artist',
                'verbose_name_plural': 'Artists',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Url')),
                ('name', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Genre',
                'verbose_name_plural': 'Genres',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Url')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('username', models.CharField(max_length=20)),
                ('photo', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Url')),
                ('title', models.CharField(max_length=150)),
                ('duration', models.DurationField()),
                ('photo', models.ImageField(blank=True, upload_to='photos/%Y/%m/')),
                ('is_published', models.BooleanField(default=True, verbose_name='Published?')),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='trackAlbum', to='SDA.album')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='trackArtist', to='SDA.artist')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='trackGenre', to='SDA.genre')),
            ],
            options={
                'verbose_name': 'Track',
                'verbose_name_plural': 'Songs',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Url')),
                ('title', models.CharField(max_length=150)),
                ('photo', models.ImageField(blank=True, upload_to='photos/%Y/%m/')),
                ('description', models.CharField(max_length=255)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='playlistAuthor', to='SDA.user')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='playlistTrack', to='SDA.track')),
            ],
        ),
        migrations.CreateModel(
            name='MyMusics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Url')),
                ('title', models.CharField(max_length=150)),
                ('photo', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('description', models.CharField(max_length=255)),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='MyPlaylistTrack', to='SDA.track')),
            ],
        ),
        migrations.AddField(
            model_name='album',
            name='artist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='albumArtist', to='SDA.artist'),
        ),
        migrations.AddField(
            model_name='album',
            name='genre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='albumGenre', to='SDA.genre'),
        ),
    ]
